
eosLib = {
    'PAL6'  :[ 34.380,  2.227,  2.189,  2.159 ],
    'SLy'   :[ 34.384,  3.005,  2.988,  2.851 ],
    'APR1'  :[ 33.943,  2.442,  3.256,  2.908 ],
    'APR2'  :[ 34.126,  2.643,  3.014,  2.945 ],
    'APR3'  :[ 34.392,  3.166,  3.573,  3.281 ],
    'APR4'  :[ 34.269,  2.830,  3.445,  3.348 ],
    'FPS'   :[ 34.283,  2.985,  2.863,  2.600 ],
    'WFF1'  :[ 34.031,  2.519,  3.791,  3.660 ],
    'WFF2'  :[ 34.233,  2.888,  3.475,  3.517 ],
    'WFF3'  :[ 34.283,  3.329,  2.952,  2.589 ],
    'BBB2'  :[ 34.331,  3.418,  2.835,  2.832 ],
    'BPAL12':[ 34.358,  2.209,  2.201,  2.176 ],
    'ENG'   :[ 34.437,  3.514,  3.130,  3.168 ],
    'MPA1'  :[ 34.495,  3.446,  3.572,  2.887 ],
    'MS1'   :[ 34.858,  3.224,  3.033,  1.325 ],
    'MS2'   :[ 34.605,  2.447,  2.184,  1.855 ],
    'MS1b'  :[ 34.855,  3.456,  3.011,  1.425 ],
    'PS'    :[ 34.671,  2.216,  1.640,  2.365 ],
    'GS1a'  :[ 34.504,  2.350,  1.267,  2.421 ],
    'GS2a'  :[ 34.642,  2.519,  1.571,  2.314 ],
    'BGN1H1':[ 34.623,  3.258,  1.472,  2.464 ],
    'GNH3'  :[ 34.648,  2.664,  2.194,  2.304 ],
    'H1'    :[ 34.564,  2.595,  1.845,  1.897 ],
    'H2'    :[ 34.617,  2.775,  1.855,  1.858 ],
    'H3'    :[ 34.646,  2.787,  1.951,  1.901 ],
    'H4'    :[ 34.669,  2.909,  2.246,  2.144 ],
    'H5'    :[ 34.609,  2.793,  1.974,  1.915 ],
    'H6a'   :[ 34.593,  2.637,  2.121,  2.064 ],
    'H7'    :[ 34.559,  2.621,  2.048,  2.006 ],
    'PCL2'  :[ 34.507,  2.554,  1.880,  1.977 ],
    'ALF1'  :[ 34.055,  2.013,  3.389,  2.033 ],
    'ALF2'  :[ 34.616,  4.070,  2.411,  1.890 ],
    'ALF3'  :[ 34.283,  2.883,  2.653,  1.952 ],
    'ALF4'  :[ 34.314,  3.009,  3.438,  1.803 ]
}

def EoS(name, rho):
    ll = eosLib[ name ]

    p1 = 10**ll[0]
    g1 = ll[1]
    g2 = ll[2]
    g3 = ll[3]

    r2 = 10**14.7
    r3 = 10**15.0

    #construct normalization constants starting from nuclear saturation depth
    r1 = 1.0e14
    K1 = p1/r1**g1
    K2 = (K1 * r2**g1)/r2**g2
    K3 = (K2 * r3**g2)/r3**g3

    K = K3
    g = g3
    if rho < r3:
        K = K2
        g = g2
        if rho < r2:
            K = K1
            g = g1
            if rho < r1:
                K = K1
                g = 1.35692 #SLy crust

    return K * rho**g

print EoS('SLy', 10e15)




